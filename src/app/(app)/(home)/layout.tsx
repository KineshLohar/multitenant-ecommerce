import type { Metadata } from "next";
import { DM_Sans } from 'next/font/google'
import { Navbar } from "./navbar";
import { Footer } from "./footer";
import { SearchFilters } from "./search-filters";
import { getPayload } from "payload";
import configPromise from "@payload-config"
import { CustomeCategory } from "../types";
import { Category } from "@/payload-types";

const dmSans = DM_Sans({
    subsets: ['latin']
})

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

export default async function Layout({
    children,
}: Readonly<{
    children: React.ReactNode;
}>) {

    const payload = await getPayload({
        config: configPromise
    })

    const data = await payload.find({
        collection: "categories",
        depth: 1,
        where: {
            parent: {
                exists: false
            }
        },
        sort: "name"
    })

    const formattedData: CustomeCategory[] = data?.docs?.map(doc => ({
        ...doc,
        subcategories: (doc?.subcategories?.docs ?? []).map((subDoc) => ({
            ...(subDoc as Category),
            subcategories: undefined
        }))
    }))

    return (
        <div className="flex flex-col min-h-screen">

            <Navbar />
            <SearchFilters data={formattedData} />
            <div className=" flex-1 bg-[#F4F4F0]">
                {children}
            </div>
            <Footer />
        </div>
    );
}
